Top functions from sampling profiles
Auto-generated by scripts/afdo_summary.sh
=========================================

sampling/keystore2.afdo
====
<core::hash::sip::Hasher<core::hash::sip::Sip13Rounds> as core::hash::Hasher>::write
<i32 as binder::parcel::parcelable::Serialize>::serialize
<rusqlite::statement::Statement>::value_ref
<rusqlite::row::Row>::get::<usize, i32>
<keystore2::watchdog::Watchdog>::watch_with_optional
<keystore2::watchdog::WatchPoint as core::ops::drop::Drop>::drop
<&[&dyn rusqlite::types::to_sql::ToSql] as rusqlite::params::Params>::__bind_in
<keystore2::database::KeystoreDB>::load_key_components
<i32 as binder::parcel::parcelable::Deserialize>::deserialize
<keystore2::key_parameter::KeyParameterValue>::new_from_sql
<rusqlite::row::Rows>::next
<binder::parcel::BorrowedParcel>::set_data_position
<android_logger::PlatformLogWriter as core::fmt::Write>::write_str
<android_hardware_security_keymint::aidl::android::hardware::security::keymint::KeyParameter::KeyParameter as binder::parcel::parcelable::Parcelable>::write_to_parcel
<android_system_keystore2::aidl::android::system::keystore2::Authorization::Authorization as binder::parcel::parcelable::Parcelable>::write_to_parcel
<keystore2::security_level::KeystoreSecurityLevel as android_system_keystore2::aidl::android::system::keystore2::IKeystoreSecurityLevel::IKeystoreSecurityLevel>::createOperation


sampling/libart_arm64.afdo
====
art::gc::collector::MarkCompact::CompactPage(art::mirror::Object*, unsigned int, unsigned char*, bool)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::RefFieldsVisitor, art::gc::collector::MarkCompact::RefFieldsVisitor>(art::gc::collector::MarkCompact::RefFieldsVisitor const&, art::gc::collector::MarkCompact::RefFieldsVisitor const&)
art::gc::collector::MarkCompact::MarkReachableObjects()
art::CodeInfo::DecodeInlineInfoOnly(art::OatQuickMethodHeader const*)
void art::StackVisitor::WalkStack<(art::StackVisitor::CountTransitions)0>(bool)
art::StackVisitor::GetDexPc(bool) const
void art::mirror::Class::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::RefFieldsVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::MarkCompact::RefFieldsVisitor const&)
art::OatQuickMethodHeader::Contains(unsigned long) const
unsigned long art::mirror::Object::VisitRefsForCompaction<true, false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)2, art::gc::collector::MarkCompact::RefsUpdateVisitor<false, false>>(art::gc::collector::MarkCompact::RefsUpdateVisitor<false, false> const&, art::MemberOffset, art::MemberOffset)
void art::Monitor::Lock<(art::LockReason)1>(art::Thread*)
art::System_arraycopy(_JNIEnv*, _jclass*, _jobject*, int, _jobject*, int, int) (.__uniq.110717464938643750821353004938495288567)
art::gc::collector::MarkCompact::ProcessMarkStack()
art::gc::collector::MarkCompact::LinearAllocPageUpdater::MultiObjectArena(unsigned char*, unsigned char*)
art::StringFactory_newStringFromBytes(_JNIEnv*, _jclass*, _jbyteArray*, int, int, int) (.__uniq.69738951954755148529605360874931303746)
art::StringFactory_newStringFromUtf8Bytes(_JNIEnv*, _jclass*, _jbyteArray*, int, int) (.__uniq.69738951954755148529605360874931303746)
art::Monitor::MonitorExit(art::Thread*, art::ObjPtr<art::mirror::Object>)


sampling/libart_arm.afdo
====
void art::interpreter::ExecuteSwitchImplCpp<false>(art::interpreter::SwitchImplContext*)
art::verifier::impl::(anonymous namespace)::MethodVerifier<false>::CodeFlowVerifyInstruction(unsigned int*) (.__uniq.63246233319839034720636906213703941800)
void art::interpreter::ExecuteSwitchImplCpp<true>(art::interpreter::SwitchImplContext*)
artInvokeStaticTrampolineWithAccessCheck
bool art::interpreter::DoInvokePolymorphic<false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
art::RuntimeCallbacks::ThreadParkFinished(bool)
artInvokeInterfaceTrampolineWithAccessCheck
art::MethodHandleInvokeExact(art::Thread*, art::ShadowFrame&, art::Handle<art::mirror::MethodHandle>, art::Handle<art::mirror::MethodType>, art::InstructionOperands const*, art::JValue*)
bool art::interpreter::DoFilledNewArray<false, false>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
void art::mirror::Executable::InitializeFromArtMethod<(art::PointerSize)4>(art::ArtMethod*)
art::verifier::LongLoType::Dump() const
art::jit::Jit::PrepareForOsr(art::ArtMethod*, unsigned int, unsigned int*)
art::gc::space::ImageSpace::Loader::LoadImageFile(char const*, char const*, art::ImageHeader const&, int, bool, art::TimingLogger*, art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*)
artQuickProxyInvokeHandler
art::RuntimeCallbacks::AddParkCallback(art::ParkCallback*)
art::verifier::impl::(anonymous namespace)::MethodVerifier<false>::VerifyInvocationArgs(art::Instruction const*, art::verifier::MethodType, bool) (.__uniq.63246233319839034720636906213703941800)


sampling/libartbase_arm64.afdo
====
OpenArchiveInternal(ZipArchive*, char const*) (.__uniq.167259607556841407834158900965132344175)
art::NanoTime()
art::BitVector::Union(art::BitVector const*)
CdEntryMapZip32<ZipStringOffset20>::AddToMap(std::__1::basic_string_view<char, std::__1::char_traits<char>>, unsigned char const*)
art::BitVector::BitVector(unsigned int, bool, art::Allocator*)
art::BitVector::BitVector(unsigned int, bool, art::Allocator*)
art::ArenaBitVector::ArenaBitVector(art::ScopedArenaAllocator*, unsigned int, bool, art::ArenaAllocKind)
art::ArenaBitVector::ArenaBitVector(art::ScopedArenaAllocator*, unsigned int, bool, art::ArenaAllocKind)
art::BitVector::UnionIfNotIn(art::BitVector const*, art::BitVector const*)
art::ArenaBitVectorAllocator<art::ScopedArenaAllocator>::Alloc(unsigned long)
art::MicroTime()
art::ScopedArenaAllocator::~ScopedArenaAllocator()
art::ScopedArenaAllocator::~ScopedArenaAllocator()
std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long)
art::BitVector::GetHighestBitSet() const
art::ArenaBitVector::ArenaBitVector(art::ArenaAllocator*, unsigned int, bool, art::ArenaAllocKind)


sampling/libartbase_arm.afdo
====
unix_file::FdFile::FlushCloseOrErase()
unix_file::FdFile::Write(char const*, long long, long long)
art::MemMap::ReplaceWith(art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*)
unix_file::FdFile::moveTo(unix_file::FdFile::GuardState, unix_file::FdFile::GuardState, char const*)
unix_file::FdFile::Release()
unix_file::FdFile::Destroy()
art::CompilerFilter::ParseCompilerFilter(char const*, art::CompilerFilter::Filter*)
std::__1::basic_filebuf<char, std::__1::char_traits<char>>::__make_mdstring(unsigned int)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
std::__1::basic_filebuf<char, std::__1::char_traits<char>>::basic_filebuf()


sampling/libbinder.afdo
====
android::Parcel::writeInt32(int)
android::Parcel::readInt32(int*) const
android::IPCThreadState::executeCommand(int)
android::Parcel::readInt32() const
android::IPCThreadState::transact(int, unsigned int, android::Parcel const&, android::Parcel*, unsigned int)
android::Parcel::writeInt64(long)
android::Parcel::writeInplace(unsigned long)
android::IPCThreadState::joinThreadPool(bool)
android::Parcel::flattenBinder(android::sp<android::IBinder> const&)
android::Parcel::writeInterfaceToken(char16_t const*, unsigned long)
android::Parcel::freeDataNoInit()
android::Parcel::readChar(char16_t*) const
android::Parcel::unflattenBinder(android::sp<android::IBinder>*) const
android::Parcel::enforceInterface(char16_t const*, unsigned long, android::IPCThreadState*) const
android::Parcel::readString8Inplace(unsigned long*) const
android::Parcel::readString16Inplace(unsigned long*) const


sampling/libc++.afdo
====
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::push_back(char)
operator new(unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::assign(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::compare(char const*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize(unsigned long, char)
std::__1::mutex::lock()
std::__1::mutex::unlock()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::reserve(unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::compare(unsigned long, unsigned long, char const*, unsigned long) const
std::__1::chrono::steady_clock::now()
std::__1::__shared_mutex_base::lock_shared()
std::__1::__itoa::__u64toa(unsigned long, char*)


sampling/libgui.afdo
====
android::TransactionCompletedListener::onTransactionCompleted(android::ListenerStats)
android::BLASTBufferQueue::acquireNextBufferLocked(std::__1::optional<android::SurfaceComposerClient::Transaction*>)
android::SurfaceComposerClient::Transaction::getLayerState(android::sp<android::SurfaceControl> const&)
android::TransactionCompletedListener::addSurfaceControlToCallbacks(android::SurfaceComposerClient::CallbackInfo&, android::sp<android::SurfaceControl> const&)
android::BufferQueueProducer::dequeueBuffer(int*, android::sp<android::Fence>*, unsigned int, unsigned int, int, unsigned long, unsigned long*, android::FrameEventHistoryDelta*)
android::layer_state_t::read(android::Parcel const&)
android::SurfaceComposerClient::Transaction::apply(bool, bool)
std::__1::unordered_map<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>>::unordered_map(std::__1::unordered_map<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>> const&)
android::BnSurfaceComposer::onTransact(unsigned int, android::Parcel const&, android::Parcel*, unsigned int)
android::BLASTBufferQueue::transactionCallback(long, android::sp<android::Fence> const&, std::__1::vector<android::SurfaceControlStats, std::__1::allocator<android::SurfaceControlStats>> const&)
android::BufferQueueProducer::queueBuffer(int, android::IGraphicBufferProducer::QueueBufferInput const&, android::IGraphicBufferProducer::QueueBufferOutput*)
android::BLASTBufferItemConsumer::addAndGetFrameTimestamps(android::NewFrameEventsEntry const*, android::FrameEventHistoryDelta*)
android::layer_state_t::write(android::Parcel&) const
android::Vector<android::ComposerState>::do_splat(void*, void const*, unsigned long) const
android::Surface::queueBuffer(ANativeWindowBuffer*, int)
android::BufferQueueConsumer::acquireBuffer(android::BufferItem*, long, unsigned long)


sampling/libhidlbase.afdo
====
android::hardware::Parcel::writeEmbeddedBuffer(void const*, unsigned long, unsigned long*, unsigned long, unsigned long)
android::hardware::IPCThreadState::joinThreadPool(bool)
android::hardware::Parcel::readNullableEmbeddedBuffer(unsigned long, unsigned long*, unsigned long, unsigned long, void const**) const
android::hardware::Parcel::writeInt32(int)
android::hardware::Parcel::freeDataNoInit()
android::hardware::IPCThreadState::waitForResponse(android::hardware::Parcel*, int*)
android::hardware::Parcel::setDataSize(unsigned long)
android::hardware::details::return_status::~return_status()
android::hardware::details::return_status::~return_status()
android::hardware::details::return_status::operator=(android::hardware::details::return_status&&)
android::hardware::Parcel::ipcSetDataReference(unsigned char const*, unsigned long, unsigned long long const*, unsigned long, void (*)(android::hardware::Parcel*, unsigned char const*, unsigned long, unsigned long long const*, unsigned long, void*), void*)
android::hardware::ProcessState::self()
android::hardware::Parcel::writeBuffer(void const*, unsigned long, unsigned long*)
android::hardware::Parcel::Parcel()
android::hardware::Parcel::Parcel()
android::hardware::Parcel::closeFileDescriptors()


sampling/libhwui.afdo
====
neon::lowp::bilerp_clamp_8888(unsigned long, SkRasterPipelineStage*, unsigned long, unsigned long, unsigned short vector[8], unsigned short vector[8], unsigned short vector[8], unsigned short vector[8], unsigned short vector[8], unsigned short vector[8], unsigned short vector[8], unsigned short vector[8]) (.__uniq.171973291814702829445853707239222793327)
neon::S32_alpha_D32_filter_DX(SkBitmapProcState const&, unsigned int const*, int, unsigned int*)
skgpu::KeyBuilder::addBits(unsigned int, unsigned int, std::__1::basic_string_view<char, std::__1::char_traits<char>>)
android::uirenderer::RenderNode::prepareTreeImpl(android::uirenderer::TreeObserver&, android::uirenderer::TreeInfo&, bool)
android::uirenderer::skiapipeline::ATraceMemoryDump::dumpNumericValue(char const*, char const*, char const*, unsigned long)
skgpu::ganesh::ClipStack::clip(skgpu::ganesh::ClipStack::RawElement&&)
GrGpuResource::dumpMemoryStatistics(SkTraceMemoryDump*) const
GetCoeffsFast(VP8BitReader*, VP8BandProbas const* const*, int, int const*, int, short*) (.__uniq.221674093421751675605877729630738212549)
void filter_scale<&clamp(int, int), &clamp(int, int), &extract_low_bits_clamp_clamp(int, int), true>(SkBitmapProcState const&, unsigned int*, int, int, int) (.__uniq.325964652190161525160875187559210144483)
android::uirenderer::skiapipeline::RenderNodeDrawable::drawContent(SkCanvas*) const
android::uirenderer::skiapipeline::SkiaDisplayList::prepareListAndChildren(android::uirenderer::TreeObserver&, android::uirenderer::TreeInfo&, bool, std::__1::function<void (android::uirenderer::RenderNode*, android::uirenderer::TreeObserver&, android::uirenderer::TreeInfo&, bool)>)
android::uirenderer::skiapipeline::ATraceMemoryDump::dumpStringValue(char const*, char const*, char const*)
android::uirenderer::skiapipeline::RenderNodeDrawable::onDraw(SkCanvas*)
android::uirenderer::skiapipeline::RenderNodeDrawable::setViewProperties(android::uirenderer::RenderProperties const&, SkCanvas*, float*, bool)
android::uirenderer::DamageAccumulator::popTransform()
neon::bilerp_clamp_8888(unsigned long, SkRasterPipelineStage*, unsigned long, unsigned long, std::byte*, float vector[4], float vector[4], float vector[4], float vector[4], float vector[4], float vector[4], float vector[4], float vector[4]) (.__uniq.171973291814702829445853707239222793327)


sampling/liblog.afdo
====
__android_log_level(char const*, unsigned long) (.__uniq.322530350400203086403630799066394170300)
__android_log_is_loggable
PmsgWrite(log_id, timespec*, iovec*, unsigned long)
LogdWrite(log_id, timespec*, iovec*, unsigned long)
write_to_log(log_id, iovec*, unsigned long) (.__uniq.220335083604911598582518859745105420324)
__android_log_logd_logger
__android_log_buf_write
log_to_file_if_overridden(__android_log_message const*) (.__uniq.220335083604911598582518859745105420324)
__android_log_get_minimum_priority
__android_log_print
__android_log_is_loggable_len
GetDefaultTag()
android::base::ErrnoRestorer::ErrnoRestorer()
LogdRead
android::base::ErrnoRestorer::~ErrnoRestorer()
android_logger_list_read


sampling/libsensorservice.afdo
====
android::SensorServiceUtil::SensorList::getInterface(int) const
android::SensorService::SensorEventConnection::sendEvents(sensors_event_t const*, unsigned long, sensors_event_t*, android::wp<android::SensorService::SensorEventConnection const> const*)
android::SensorService::SensorEventConnection::hasOneShotSensors() const
std::__1::vector<android::sp<android::SensorService::SensorEventConnection>, std::__1::allocator<android::sp<android::SensorService::SensorEventConnection>>> const& android::SensorService::ConnectionSafeAutolock::getConnectionsHelper<android::SensorService::SensorEventConnection>(android::SortedVector<android::wp<android::SensorService::SensorEventConnection>> const&, std::__1::vector<std::__1::vector<android::sp<android::SensorService::SensorEventConnection>, std::__1::allocator<android::sp<android::SensorService::SensorEventConnection>>>, std::__1::allocator<std::__1::vector<android::sp<android::SensorService::SensorEventConnection>, std::__1::allocator<android::sp<android::SensorService::SensorEventConnection>>>>>*)
android::SensorService::threadLoop()
std::__1::shared_ptr<android::SensorInterface>::~shared_ptr()
std::__1::shared_ptr<android::HardwareSensor>::~shared_ptr()
android::SensorService::SensorEventConnection::needsWakeLock()
std::__1::vector<android::sp<android::SensorService::SensorEventConnection>, std::__1::allocator<android::sp<android::SensorService::SensorEventConnection>>>::vector(std::__1::vector<android::sp<android::SensorService::SensorEventConnection>, std::__1::allocator<android::sp<android::SensorService::SensorEventConnection>>> const&)
android::SensorService::ConnectionSafeAutolock::~ConnectionSafeAutolock()
std::__1::vector<android::sp<android::SensorService::SensorEventConnection>, std::__1::allocator<android::sp<android::SensorService::SensorEventConnection>>>::~vector()
android::SensorService::cleanupAutoDisabledSensorLocked(android::sp<android::SensorService::SensorEventConnection> const&, sensors_event_t const*, int)
android::AidlSensorHalWrapper::pollFmq(sensors_event_t*, unsigned long)
android::SensorService::SensorEventConnection::hasSensor(int) const
android::SensorService::isUidActive(unsigned int)
android::SensorServiceUtil::RecentEventLogger::addEvent(sensors_event_t const&)


sampling/libui.afdo
====
std::__1::vector<android::Rect, android::InlineStdAllocator<android::Rect, 4ul>>::reserve(unsigned long)
android::Region::clear()
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<android::Rect const*>>::value && is_constructible<android::Rect, std::__1::iterator_traits<std::__1::__wrap_iter<android::Rect const*>>::reference>::value, std::__1::__wrap_iter<android::Rect*>>::type std::__1::vector<android::Rect, android::InlineStdAllocator<android::Rect, 4ul>>::insert<std::__1::__wrap_iter<android::Rect const*>>(std::__1::__wrap_iter<android::Rect const*>, std::__1::__wrap_iter<android::Rect const*>, std::__1::__wrap_iter<android::Rect const*>)
android::Region::boolean_operation(unsigned int, android::Region&, android::Region const&, android::Region const&, int, int)
android::Region::operator=(android::Region const&)
android::Region::Region()
android::Region::Region()
android::Region::rasterizer::~rasterizer()
android::Region::rasterizer::~rasterizer()
android::Region::Region(android::Region const&)
android::Region::Region(android::Region const&)
android::hardware::hidl_vec<unsigned char>::operator=(android::hardware::hidl_vec<unsigned char> const&)
android::Region::~Region()
android::Region::~Region()
android::Region::boolean_operation(unsigned int, android::Region&, android::Region const&, android::Rect const&, int, int)
android::Region::orSelf(android::Rect const&)


sampling/libutils.afdo
====
android::RefBase::decStrong(void const*) const
systemTime
android::RefBase::incStrong(void const*) const
android::RefBase::weakref_type::attemptIncStrong(void const*)
android::Looper::pollOnce(int, int*, int*, void**)
utf8_to_utf16
utf8_to_utf16_length
strzcmp16
android::VectorImpl::clear()
utf16_to_utf8
android::uptimeMillis()
android::elapsedRealtime()
utf16_to_utf8_length
android::SortedVectorImpl::indexOf(void const*) const
android::SharedBuffer::release(unsigned int) const
android::RefBase::weakref_type::decWeak(void const*)


sampling/linker_arm64.afdo
====
__dl__ZL21soinfo_do_lookup_implILb0EEPK9elf64_symPKcPK12version_infoPP6soinfoRK16SymbolLookupList.__uniq.331521225453620004837736674378903349473
__dl__Z23calculate_gnu_hash_neonPKc
__dl__ZL20packed_relocate_implIL9RelocMode1EEbR9Relocator15sleb128_decoder.__uniq.153370809355997480299804515629147722701
__dl__ZN15BionicAllocator10alloc_implEmm
__dl__ZN26BionicSmallObjectAllocator5allocEv
__dl__ZN15BionicAllocator4freeEPv
__dl__Z21__libc_init_AT_SECUREPPc
__dl__ZL19plain_relocate_implIL9RelocMode0EEbR9RelocatorP10elf64_relam.__uniq.153370809355997480299804515629147722701
__dl__ZN6soinfo19lookup_version_infoERK14VersionTrackerjPKcPPK12version_info
__dl__ZN26BionicSmallObjectAllocator4freeEPv
__dl__ZL24dlsym_handle_lookup_implP19android_namespace_tP6soinfoS2_PS2_R10SymbolNamePK12version_info.__uniq.250007671217850615957365636956552013758
__dl__Z14find_librariesP19android_namespace_tP6soinfoPKPKcmPS2_PNSt3__16vectorIS2_NS8_9allocatorIS2_EEEEmiPK17android_dlextinfobPNS9_IS0_NSA_IS0_EEEE
__dl__ZN6soinfo13relocate_relrEv
__dl__ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm
__dl__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__dl__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_mmRKS4_


sampling/linker_arm.afdo
====
__dl__ZL29__linker_init_post_relocationR19KernelArgumentBlockR6soinfo
__dl__ZN6soinfo17call_constructorsEv
__dl___vfprintf
__dl_async_safe_format_fd_va_list
__dl__Z13format_stringPNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6vectorINS_4pairIS5_S5_EENS3_IS9_EEEE
__dl__ZN9ElfReader18ReadDynamicSectionEv
__dl__ZL15get_cpu_variantv
__dl__ZN16SymbolLookupList19set_dt_symbolic_libEP6soinfo
__dl__Z38increment_dso_handle_reference_counterPv
__dl__ZN6Config18read_binary_configEPKcS1_bbPPKS_PNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
__dl_android_fdsan_close_with_tag
__dl__ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_
__dl__ZL11fdsan_errorPKcz
__dl__ZN6soinfo13prelink_imageEv
__dl__Z23init_default_namespacesPKc
__dl__ZN6soinfo16call_destructorsEv


sampling/lmkd.afdo
====
mp_event_psi(int, unsigned int, polling_params*) (.__uniq.220333500789862702810363420933441579510)
meminfo_parse(meminfo*) (.__uniq.220333500789862702810363420933441579510)
mainloop() (.__uniq.220333500789862702810363420933441579510)
reread_file(reread_data*) (.__uniq.220333500789862702810363420933441579510)
Watchdog::start()
Watchdog::stop()
stop_wait_for_proc_kill(bool) (.__uniq.220333500789862702810363420933441579510)


sampling/surfaceflinger.afdo
====
android::SurfaceFlinger::updateLayerSnapshots(android::VsyncId, long, bool, bool&)
android::scheduler::LayerHistory::summarize(android::scheduler::RefreshRateSelector const&, long)
android::RegionSamplingThread::threadMain()
android::surfaceflinger::frontend::LayerSnapshotBuilder::updateSnapshotsInHierarchy(android::surfaceflinger::frontend::LayerSnapshotBuilder::Args const&, android::surfaceflinger::frontend::LayerHierarchy const&, android::surfaceflinger::frontend::LayerHierarchy::TraversalPath&, android::surfaceflinger::frontend::LayerSnapshot const&, int)
android::frametimeline::impl::TokenManager::generateTokenForPredictions(android::frametimeline::TimelineItem&&)
android::Layer::commitTransaction()
android::compositionengine::impl::planner::Planner::plan(android::compositionengine::Output::OutputLayersEnumerator<android::compositionengine::Output>&&)
android::impl::EventThread::shouldConsumeEvent(android::DisplayEventReceiver::Event const&, android::sp<android::EventThreadConnection> const&) const
android::impl::EventThread::threadMain(std::__1::unique_lock<std::__1::mutex>&)
android::SurfaceFlinger::composite(android::PhysicalDisplayId, android::ftl::SmallMap<android::PhysicalDisplayId, android::scheduler::FrameTargeter*, 3ul, std::__1::equal_to<android::PhysicalDisplayId>> const&)
android::scheduler::VSyncPredictor::getVsyncSequenceLocked(long) const
android::compositionengine::impl::OutputLayer::writeStateToHWC(bool, bool, unsigned int, bool, bool)
android::compositionengine::impl::planner::LayerState::getDifferingFields(android::compositionengine::impl::planner::LayerState const&) const
android::surfaceflinger::frontend::TransactionHandler::collectTransactions()
android::TransactionTracing::loop()
android::surfaceflinger::frontend::TransactionHandler::queueTransaction(android::TransactionState&&)


